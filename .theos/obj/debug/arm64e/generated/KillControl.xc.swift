// ###
// # AUTOGENERATED ORION GLUE FILE. DO NOT EDIT.
// ###

// orion:disable
// swiftlint:disable all

import Foundation
import KillControlC
import Orion

extension SBReusableSnapshotItemContainer_Hook {
    enum _Glue: _GlueClassHook {
        typealias HookType = SBReusableSnapshotItemContainer_Hook

        final class OrigType: SBReusableSnapshotItemContainer_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 56)
            @objc override func initWithFrame(_ arg1: CGRect, appLayout arg2: SBAppLayout, delegate arg3: AnyObject, active arg4: Bool) -> Target {
            #sourceLocation()
                _Glue.orion_orig1(target, _Glue.orion_sel1, arg1, arg2, arg3, arg4)
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 74)
            @objc override func _updateTransformForCurrentHighlight()  {
            #sourceLocation()
                _Glue.orion_orig2(target, _Glue.orion_sel2)
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 92)
            @objc override func _scrollViewShouldPanGestureTryToBegin(_ arg1: AnyObject) -> Bool {
            #sourceLocation()
                _Glue.orion_orig3(target, _Glue.orion_sel3, arg1)
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 111)
            @objc override func _updateHeaderAnimated(_ arg1: Bool)  {
            #sourceLocation()
                _Glue.orion_orig4(target, _Glue.orion_sel4, arg1)
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 120)
            @objc override func setTitleOpacity(_ arg1: CGFloat)  {
            #sourceLocation()
                _Glue.orion_orig5(target, _Glue.orion_sel5, arg1)
            }
        }

        final class SuprType: SBReusableSnapshotItemContainer_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 56)
            @objc override func initWithFrame(_ arg1: CGRect, appLayout arg2: SBAppLayout, delegate arg3: AnyObject, active arg4: Bool) -> Target {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 56)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, CGRect, SBAppLayout, AnyObject, Bool) -> Target).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel1, arg1, arg2, arg3, arg4)
                }
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 74)
            @objc override func _updateTransformForCurrentHighlight()  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 74)
                callSuper((@convention(c) (UnsafeRawPointer, Selector) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel2)
                }
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 92)
            @objc override func _scrollViewShouldPanGestureTryToBegin(_ arg1: AnyObject) -> Bool {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 92)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, AnyObject) -> Bool).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel3, arg1)
                }
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 111)
            @objc override func _updateHeaderAnimated(_ arg1: Bool)  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 111)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, Bool) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel4, arg1)
                }
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 120)
            @objc override func setTitleOpacity(_ arg1: CGFloat)  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 120)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, CGFloat) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel5, arg1)
                }
            }
        }

        static let storage = initializeStorage()

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 56)
        private static let orion_sel1 = #selector(SBReusableSnapshotItemContainer_Hook.initWithFrame(_:appLayout:delegate:active:) as (SBReusableSnapshotItemContainer_Hook) -> (CGRect, SBAppLayout, AnyObject, Bool) -> Target)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 56)
        private static var orion_orig1: @convention(c) (Target, Selector, CGRect, SBAppLayout, AnyObject, Bool) -> Target = { target, _cmd, arg1, arg2, arg3, arg4 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).initWithFrame(_:appLayout:delegate:active:)(arg1, arg2, arg3, arg4))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 74)
        private static let orion_sel2 = #selector(SBReusableSnapshotItemContainer_Hook._updateTransformForCurrentHighlight as (SBReusableSnapshotItemContainer_Hook) -> () -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 74)
        private static var orion_orig2: @convention(c) (Target, Selector) -> Void = { target, _cmd in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target)._updateTransformForCurrentHighlight())
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 92)
        private static let orion_sel3 = #selector(SBReusableSnapshotItemContainer_Hook._scrollViewShouldPanGestureTryToBegin(_:) as (SBReusableSnapshotItemContainer_Hook) -> (AnyObject) -> Bool)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 92)
        private static var orion_orig3: @convention(c) (Target, Selector, AnyObject) -> Bool = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target)._scrollViewShouldPanGestureTryToBegin(_:)(arg1))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 111)
        private static let orion_sel4 = #selector(SBReusableSnapshotItemContainer_Hook._updateHeaderAnimated(_:) as (SBReusableSnapshotItemContainer_Hook) -> (Bool) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 111)
        private static var orion_orig4: @convention(c) (Target, Selector, Bool) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target)._updateHeaderAnimated(_:)(arg1))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 120)
        private static let orion_sel5 = #selector(SBReusableSnapshotItemContainer_Hook.setTitleOpacity(_:) as (SBReusableSnapshotItemContainer_Hook) -> (CGFloat) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 120)
        private static var orion_orig5: @convention(c) (Target, Selector, CGFloat) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).setTitleOpacity(_:)(arg1))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 143)
        private static let orion_sel6 = #selector(SBReusableSnapshotItemContainer_Hook.refreshLockedStatus as (SBReusableSnapshotItemContainer_Hook) -> () -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 143)
        private static var orion_imp6: @convention(c) (Target, Selector) -> Void = { target, _cmd in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).refreshLockedStatus())
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 152)
        private static let orion_sel7 = #selector(SBReusableSnapshotItemContainer_Hook.killControlToggleItemWhiteListedWithRecogniser(_:) as (SBReusableSnapshotItemContainer_Hook) -> (UILongPressGestureRecognizer) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 152)
        private static var orion_imp7: @convention(c) (Target, Selector, UILongPressGestureRecognizer) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).killControlToggleItemWhiteListedWithRecogniser(_:)(arg1))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 162)
        private static let orion_sel8 = #selector(SBReusableSnapshotItemContainer_Hook.killControlToggleItemWhiteListed(withIdentifer:) as (SBReusableSnapshotItemContainer_Hook) -> (String) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 162)
        private static var orion_imp8: @convention(c) (Target, Selector, String) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).killControlToggleItemWhiteListed(withIdentifer:)(arg1))
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 190)
        private static let orion_sel9 = #selector(SBReusableSnapshotItemContainer_Hook.killControlUpdateHeaderItems(withFilter:) as (SBReusableSnapshotItemContainer_Hook) -> (KCFilterType) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 190)
        private static var orion_imp9: @convention(c) (Target, Selector, KCFilterType) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBReusableSnapshotItemContainer_Hook(target: target).killControlUpdateHeaderItems(withFilter:)(arg1))
        }
    
        static func activate(withClassHookBuilder builder: inout _GlueClassHookBuilder) {
            builder.addHook(orion_sel1, orion_orig1, isClassMethod: false) { orion_orig1 = $0 }
            builder.addHook(orion_sel2, orion_orig2, isClassMethod: false) { orion_orig2 = $0 }
            builder.addHook(orion_sel3, orion_orig3, isClassMethod: false) { orion_orig3 = $0 }
            builder.addHook(orion_sel4, orion_orig4, isClassMethod: false) { orion_orig4 = $0 }
            builder.addHook(orion_sel5, orion_orig5, isClassMethod: false) { orion_orig5 = $0 }
            builder.addMethod(orion_sel6, orion_imp6, isClassMethod: false)
            builder.addMethod(orion_sel7, orion_imp7, isClassMethod: false)
            builder.addMethod(orion_sel8, orion_imp8, isClassMethod: false)
            builder.addMethod(orion_sel9, orion_imp9, isClassMethod: false)
        }
    }
}

extension FBProcessManagerHook {
    enum _Glue: _GlueClassHook {
        typealias HookType = FBProcessManagerHook

        final class OrigType: FBProcessManagerHook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 232)
            @objc override func _createProcessWithExecutionContext(_ arg1: FBProcessExecutionContext) -> FBProcess? {
            #sourceLocation()
                _Glue.orion_orig1(target, _Glue.orion_sel1, arg1)
            }
        }

        final class SuprType: FBProcessManagerHook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 232)
            @objc override func _createProcessWithExecutionContext(_ arg1: FBProcessExecutionContext) -> FBProcess? {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 232)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, FBProcessExecutionContext) -> FBProcess?).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel1, arg1)
                }
            }
        }

        static let storage = initializeStorage()

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 232)
        private static let orion_sel1 = #selector(FBProcessManagerHook._createProcessWithExecutionContext(_:) as (FBProcessManagerHook) -> (FBProcessExecutionContext) -> FBProcess?)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 232)
        private static var orion_orig1: @convention(c) (Target, Selector, FBProcessExecutionContext) -> FBProcess? = { target, _cmd, arg1 in
        #sourceLocation()
            (FBProcessManagerHook(target: target)._createProcessWithExecutionContext(_:)(arg1))
        }
    
        static func activate(withClassHookBuilder builder: inout _GlueClassHookBuilder) {
            builder.addHook(orion_sel1, orion_orig1, isClassMethod: false) { orion_orig1 = $0 }
        }
    }
}

extension SBLockStateAggregator_Hook {
    enum _Glue: _GlueClassHook {
        typealias HookType = SBLockStateAggregator_Hook

        final class OrigType: SBLockStateAggregator_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 282)
            @objc override func _updateLockState()  {
            #sourceLocation()
                _Glue.orion_orig1(target, _Glue.orion_sel1)
            }
        }

        final class SuprType: SBLockStateAggregator_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 282)
            @objc override func _updateLockState()  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 282)
                callSuper((@convention(c) (UnsafeRawPointer, Selector) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel1)
                }
            }
        }

        static let storage = initializeStorage()

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 282)
        private static let orion_sel1 = #selector(SBLockStateAggregator_Hook._updateLockState as (SBLockStateAggregator_Hook) -> () -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 282)
        private static var orion_orig1: @convention(c) (Target, Selector) -> Void = { target, _cmd in
        #sourceLocation()
            (SBLockStateAggregator_Hook(target: target)._updateLockState())
        }
    
        static func activate(withClassHookBuilder builder: inout _GlueClassHookBuilder) {
            builder.addHook(orion_sel1, orion_orig1, isClassMethod: false) { orion_orig1 = $0 }
        }
    }
}

extension SBDashBoardLockScreenEnvironment_Hook {
    enum _Glue: _GlueClassHook {
        typealias HookType = SBDashBoardLockScreenEnvironment_Hook

        final class OrigType: SBDashBoardLockScreenEnvironment_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 327)
            @objc override func handleLockButtonPress() -> Bool {
            #sourceLocation()
                _Glue.orion_orig1(target, _Glue.orion_sel1)
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 332)
            @objc override func prepareForUILock()  {
            #sourceLocation()
                _Glue.orion_orig2(target, _Glue.orion_sel2)
            }
        }

        final class SuprType: SBDashBoardLockScreenEnvironment_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 327)
            @objc override func handleLockButtonPress() -> Bool {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 327)
                callSuper((@convention(c) (UnsafeRawPointer, Selector) -> Bool).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel1)
                }
            }

            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 332)
            @objc override func prepareForUILock()  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 332)
                callSuper((@convention(c) (UnsafeRawPointer, Selector) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel2)
                }
            }
        }

        static let storage = initializeStorage()

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 327)
        private static let orion_sel1 = #selector(SBDashBoardLockScreenEnvironment_Hook.handleLockButtonPress as (SBDashBoardLockScreenEnvironment_Hook) -> () -> Bool)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 327)
        private static var orion_orig1: @convention(c) (Target, Selector) -> Bool = { target, _cmd in
        #sourceLocation()
            (SBDashBoardLockScreenEnvironment_Hook(target: target).handleLockButtonPress())
        }

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 332)
        private static let orion_sel2 = #selector(SBDashBoardLockScreenEnvironment_Hook.prepareForUILock as (SBDashBoardLockScreenEnvironment_Hook) -> () -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 332)
        private static var orion_orig2: @convention(c) (Target, Selector) -> Void = { target, _cmd in
        #sourceLocation()
            (SBDashBoardLockScreenEnvironment_Hook(target: target).prepareForUILock())
        }
    
        static func activate(withClassHookBuilder builder: inout _GlueClassHookBuilder) {
            builder.addHook(orion_sel1, orion_orig1, isClassMethod: false) { orion_orig1 = $0 }
            builder.addHook(orion_sel2, orion_orig2, isClassMethod: false) { orion_orig2 = $0 }
        }
    }
}

extension SBMediaController_Hook {
    enum _Glue: _GlueClassHook {
        typealias HookType = SBMediaController_Hook

        final class OrigType: SBMediaController_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 359)
            @objc override func _mediaRemoteNowPlayingApplicationIsPlayingDidChange(_ arg1: AnyObject)  {
            #sourceLocation()
                _Glue.orion_orig1(target, _Glue.orion_sel1, arg1)
            }
        }

        final class SuprType: SBMediaController_Hook, _GlueClassHookTrampoline {
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 359)
            @objc override func _mediaRemoteNowPlayingApplicationIsPlayingDidChange(_ arg1: AnyObject)  {
            #sourceLocation()
            #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 359)
                callSuper((@convention(c) (UnsafeRawPointer, Selector, AnyObject) -> Void).self) {
            #sourceLocation()
                    $0($1, _Glue.orion_sel1, arg1)
                }
            }
        }

        static let storage = initializeStorage()

        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 359)
        private static let orion_sel1 = #selector(SBMediaController_Hook._mediaRemoteNowPlayingApplicationIsPlayingDidChange(_:) as (SBMediaController_Hook) -> (AnyObject) -> Void)
        #sourceLocation()
        #sourceLocation(file: "Sources/KillControl/Tweak.x.swift", line: 359)
        private static var orion_orig1: @convention(c) (Target, Selector, AnyObject) -> Void = { target, _cmd, arg1 in
        #sourceLocation()
            (SBMediaController_Hook(target: target)._mediaRemoteNowPlayingApplicationIsPlayingDidChange(_:)(arg1))
        }
    
        static func activate(withClassHookBuilder builder: inout _GlueClassHookBuilder) {
            builder.addHook(orion_sel1, orion_orig1, isClassMethod: false) { orion_orig1 = $0 }
        }
    }
}

#if canImport(OrionBackend_Substrate)
import OrionBackend_Substrate
#endif

@_cdecl("orion_init")
func orion_init() {
    var hooks: [_GlueAnyHook.Type]
    hooks = []
    if true {
        hooks += [
            SBReusableSnapshotItemContainer_Hook._Glue.self,
            FBProcessManagerHook._Glue.self,
            SBLockStateAggregator_Hook._Glue.self,
            SBDashBoardLockScreenEnvironment_Hook._Glue.self,
            SBMediaController_Hook._Glue.self
        ]
    }
    KillControl._activate(
        backend: Backends.Substrate(),
        hooks: hooks
    )
}
